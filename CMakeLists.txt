cmake_minimum_required(VERSION 3.14)
set(PROJECT_NAME "game")
project(${PROJECT_NAME})
set(SFML_DIR "${CMAKE_CURRENT_LIST_DIR}/libs/SFML-2.5.1/lib/cmake/SFML")
file(GLOB ALL_REQUIRED_DLL "libs/required_dlls/*.dll")
file(COPY ${ALL_REQUIRED_DLL} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
set(CMAKE_CXX_STANDARD 17)
link_libraries(stdc++fs) #link the filesystem
file(GLOB_RECURSE SCRF "src/*.cpp" "src/*.hpp")
file(COPY "res" DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
add_executable(${PROJECT_NAME} ${SCRF} Main.cpp "src/World/Entities/Collidables/Props/Prop Factories/PropFactory.cpp" "src/World/Entities/Collidables/Props/Prop Factories/PropFactory.h" "src/World/Entities/Collidables/Props/Prop Factories/DirtPropFactory.cpp" "src/World/Entities/Collidables/Props/Prop Factories/DirtPropFactory.h" "src/World/World Generation/Chunks/ChunkPropGenerator.cpp" "src/World/World Generation/Chunks/ChunkPropGenerator.h" "src/World/World Generation/Chunks/ChunkCollisionHandler.cpp" "src/World/World Generation/Chunks/ChunkCollisionHandler.h" "src/World/Entities/Collidables/Collision Physics/BlockingPhysics.cpp" "src/World/Entities/Collidables/Collision Physics/BlockingPhysics.h" "src/World/Entities/Collidables/Collision Physics/CollisionPhysics.cpp" "src/World/Entities/Collidables/Collision Physics/CollisionPhysics.h" "src/World/World Generation/Chunks/ChunkDebug.cpp" "src/World/World Generation/Chunks/ChunkDebug.h" "src/World/World Generation/Environments/EnvRegularProxy.cpp" "src/World/World Generation/Environments/EnvRegularProxy.h" "src/World/World Generation/Environments/EnvNeighborInfo.cpp" "src/World/World Generation/Environments/EnvNeighborInfo.h" "src/World/World Generation/Environments/EnvManager.cpp" "src/World/World Generation/Environments/EnvManager.h" src/Util/SpriteShadowGenerator.cpp src/Util/SpriteShadowGenerator.h src/World/Entities/Sprites/ShadowedSpriteReg.cpp src/World/Entities/Sprites/ShadowedSpriteReg.h "src/World/Entities/Collidables/Props/Prop Factories/SandPropFactory.cpp" "src/World/Entities/Collidables/Props/Prop Factories/SandPropFactory.h" src/Animation/Action.cpp src/Animation/Action.h src/Animation/Actions.h src/World/Entities/Sprites/SpriteContainer.cpp src/World/Entities/Sprites/SpriteContainer.h "src/Animation/Hard-coded Animations/HumanoidAnimInitializer.cpp" "src/Animation/Hard-coded Animations/HumanoidAnimInitializer.h" src/World/Entities/Collidables/Hitbox/Hitbox.h src/World/Entities/Collidables/Hitbox/SingleHitbox.cpp src/World/Entities/Collidables/Hitbox/SingleHitbox.h src/World/Entities/Collidables/Hitbox/MultiHitbox.cpp src/World/Entities/Collidables/Hitbox/MultiHitbox.h src/Util/ConvexShapeExtra.cpp src/Util/ConvexShapeExtra.h src/Util/Debug/DebugPrint.h src/Util/Debug/DebugPrint.cpp)
find_package(SFML 2.5.1 COMPONENTS system window graphics network audio REQUIRED)
target_link_libraries(${PROJECT_NAME} sfml-audio sfml-graphics sfml-window sfml-system)
set(GCC_COVERAGE_COMPILE_FLAGS "-Wa,-mbig-obj")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}" )
if (DEBUG)
    add_definitions(-DDEBUG=1)
endif (DEBUG)